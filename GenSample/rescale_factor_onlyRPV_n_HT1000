

##### Normed weight factors
# ----------------------------------------------#
#Lumi = 1
Lumi = 63670

xsecRPV     = 0.013
xsecQCD1000 = 1094.


## --Gen evts baseline selection
GenRPV     = 330599
GenQCD1000 = 15466225


# weight = xsec * lumi / Gen evts
QCD1000 = xsecQCD1000 *Lumi / GenQCD1000
BKG = QCD1000
print("## BKG weight sum {0}".format(BKG))

## Selected evts ( = # of DNN input )


## ---CMS cut 32PU pre-selection baseline selection
Signal	   = 294762
QCDsel1000 = 37091


## Renorm target ( signal selected evts )
target = Signal


##### Calculate scalefactor
# ----------------------------------------------#

# 1. Make w_QCD700+w_QCD1000+w_QCD1500+w_QCD2000 = 1
w_QCD1000 = QCD1000 / BKG  



print("####   Normlaize weights to 0 ~ 1 ##")
print("## Normalized weight: ",w_QCD1000 )
print(" ")

# 2. weight * selected evts 
expQCD1000 = w_QCD1000 *QCDsel1000

print("####  Calculate expected evts ##")
print("#### Calcualte SF ##")
sf = expQCD1000 
print("--> SF: {0}".format(sf))  
print(" ")

expQCD1000  = float(expQCD1000 /sf) 



##### Show results: effective weight, events
# ----------------------------------------------#



w_QCD1000 = w_QCD1000  / sf *target

print("### training effective  weight ###")
print("QCD1000: {0}".format(w_QCD1000))
print(" ")

print("### Effective events ###")
Eff_QCD1000 = w_QCD1000 * QCDsel1000

print("QCD1000: {0}".format(Eff_QCD1000))
print(" ")
print("### Sum of BKG effective evts(=signal selected evts)")
print(Eff_QCD1000 )
print(" ")
print("### Signal selected evts)")
print(target)

